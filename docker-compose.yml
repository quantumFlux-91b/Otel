version: '3'
services:
  item-service:
    build: ./
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JAVA_TOOL_OPTIONS: -javaagent:/opentelemetry-javaagent.jar
      OTEL_LOGS_EXPORTER: logging
      OTEL_TRACES_EXPORTER: logging
      OTEL_EXPORTER_METRICS: otlp
      OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: http/protobuf
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://prometheus:9090/api/v1/otlp/v1/metrics
      OTEL_METRIC_EXPORT_INTERVAL: 15000
      OTEL_SERVICE_NAME: Demo
      OTEL_RESOURCE_ATTRIBUTES: "service:instance:id=1"

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: opentelemetry
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--web.enable-otlp-receiver"
      - "--config.file=/etc/prometheus/prometheus.yml"
  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
